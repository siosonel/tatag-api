var hasDB = 0;

function initDB(done) {
	if (hasDB) done();
	else {
		hasDB=1;	
		request.post('/tools/db_init.php?step=upload&data=testdata.sql')
			.expect(200)
			.end(exports.inspect(done));
	}
}

function inspector() {	
	var started=0, returned=0, mssg="", api="";

	var fxns = {
		done: function () {},
		body: function (res) {
			if (res && typeof res.body=='string') console.log(JSON.stringify(res.status)+' '+JSON.stringify(res.body)); 
			return fxns.done();
		}
	};
	
	function main(arg1, done) {
		if (arguments.length==2 && typeof arg2=='function') fxns.done = arg2;
		
		if (typeof arg1=='function') fxns.done = arg1;
		else if (typeof arg1=='string' && fxns[name]) return fxns[name];
		
		return fxns['body']; //default
	}
	
	main.reset = function (apiFxn, doneFxn) {
		started = 0; returned=0; mssg="";
		fxns.api = apiFxn;
		fxns.done = doneFxn;
	}
	
	main.wait = function (x) {
		started++;
		fxns.api.request(x).then(function (res) { 
			returned++;
			
			if (res.status != x.response_status) {
				mssg += x.heading+": expecting="+ x.response_status +", got "+ res.status +". ";
			}						
			if (returned==started) fxns.done(mssg ? new Error(mssg) : null);									
		}, fxns.done)
	}
	
	main.skipAsNeeded = function () {
		if (started==0) fxns.done();
	}
	
	return main;	
}

function compareKeys(a, required, allowed) {
  var aKeys = Object.keys(a), ok = required.concat(allowed); 
	
	var unexpected = aKeys.filter(function (x) { return ok.indexOf(x) < 0 });
	var missing = required.filter(function (x) { return aKeys.indexOf(x) < 0 });	
  if (unexpected.length || missing.length) return 'Unexpected properties: '+ JSON.stringify(unexpected) + ', mising: '+ JSON.stringify(missing)
}

function importTest(name, path) {
	describe(name, function () {
		require(path);
	});
}


exports.inspect = inspector();
exports.initDB = initDB;
exports.compareKeys = compareKeys;
exports.importTest = importTest;

exports.errHandler = (function errHandler(err) {
	console.log(err)
})

